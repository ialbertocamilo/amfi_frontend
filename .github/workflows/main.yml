name: Docker Image CI

on:
  push:
    branches:
      - master

permissions:
  contents: read
  packages: write
  id-token: write

env:
  IMAGE_NAME: licitaciones_web
  IMAGE_TAG: prod
  REGISTRY: ghcr.io
  REGISTRY_USERNAME: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  SERVICE_NAME: bytestone_licitaciones_web
  REPOSITORY_NAME: amfi_frontend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{env.REGISTRY}}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{env.REGISTRY}}/${{ github.repository_owner }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:${{env.IMAGE_TAG}}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: SSH Deploy to VPS
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            echo "${{ secrets.GHCR_PAT }}" | docker login ${{env.REGISTRY}} -u ${{ github.repository_owner }} --password-stdin
            cd /root/server/container
            docker pull ${{env.REGISTRY}}/${{ github.repository_owner }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:${{env.IMAGE_TAG}}
            docker stack deploy -c docker-compose.yml bytestone
            docker service update --image ${{env.REGISTRY}}/${{ github.repository_owner }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:${{env.IMAGE_TAG}} ${{ env.SERVICE_NAME }}
            docker service update --force ${{ env.SERVICE_NAME }}